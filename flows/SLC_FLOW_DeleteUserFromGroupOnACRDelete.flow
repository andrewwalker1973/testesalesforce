<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>apxc_Delete_Group_Members</name>
        <label>Delete Group Members</label>
        <locationX>778</locationX>
        <locationY>2044</locationY>
        <actionName>SLC_FLOW_DeleteUserFromGroupACR</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>groupMembersToDelete</name>
            <value>
                <elementReference>collection_GroupMembersToDelete</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>56.0</apiVersion>
    <assignments>
        <name>assignment_GM_To_Delete_AccRead</name>
        <label>GM To Delete - AccRead</label>
        <locationX>574</locationX>
        <locationY>1758</locationY>
        <assignmentItems>
            <assignToReference>collection_GroupMembersToDelete</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>gr_Get_Group_Member_Account_Read</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>apxc_Delete_Group_Members</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assignment_GM_To_Delete_Both</name>
        <label>GM To Delete - Both</label>
        <locationX>778</locationX>
        <locationY>1764</locationY>
        <assignmentItems>
            <assignToReference>collection_GroupMembersToDelete</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>gr_Get_Group_Member_Both_Groups</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>apxc_Delete_Group_Members</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assignment_GM_To_Delete_CaseRead</name>
        <label>GM To Delete - CaseRead</label>
        <locationX>992</locationX>
        <locationY>1745</locationY>
        <assignmentItems>
            <assignToReference>collection_GroupMembersToDelete</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>gr_Get_Group_Member_Case_Read</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>apxc_Delete_Group_Members</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>decision_Check_Groups_Exists</name>
        <label>Check Groups Exists</label>
        <locationX>767</locationX>
        <locationY>1281</locationY>
        <defaultConnectorLabel>No Groups Exist</defaultConnectorLabel>
        <rules>
            <name>outcome_Account_Read_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.CMN_PublicGroupAccountRead__c</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Account.CMN_PublicGroupCaseRead__c</leftValueReference>
                <operator>EqualTo</operator>
            </conditions>
            <connector>
                <targetReference>gr_Get_Group_Member_Account_Read</targetReference>
            </connector>
            <label>Only Account Read Exists</label>
        </rules>
        <rules>
            <name>outcome_Only_Case_Read_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.CMN_PublicGroupCaseRead__c</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Account.CMN_PublicGroupAccountRead__c</leftValueReference>
                <operator>EqualTo</operator>
            </conditions>
            <connector>
                <targetReference>gr_Get_Group_Member_Case_Read</targetReference>
            </connector>
            <label>Only Case Read Exists</label>
        </rules>
        <rules>
            <name>outcome_Both_Exist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.CMN_PublicGroupAccountRead__c</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Account.CMN_PublicGroupCaseRead__c</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <connector>
                <targetReference>gr_Get_Group_Member_Both_Groups</targetReference>
            </connector>
            <label>Both Exist</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_Check_if_StanlibPortalUser_PersonAccount</name>
        <label>Check if Stanlib Portal User &amp; Person Account</label>
        <locationX>768</locationX>
        <locationY>1061</locationY>
        <defaultConnectorLabel>Not Stanlib Portal User and Person Account</defaultConnectorLabel>
        <rules>
            <name>outcome_Stanlib_Portal_User_Person_Account</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>record_PortalUser.Profile.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>STANLIB Portal User</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>record_PortalUser.Account.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SLI_PersonAccount</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>record_PortalUser.IsPortalEnabled</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_Check_Groups_Exists</targetReference>
            </connector>
            <label>Stanlib Portal User &amp; Person Account</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_Check_User_Exists</name>
        <label>Check User Exists</label>
        <locationX>767</locationX>
        <locationY>862</locationY>
        <defaultConnectorLabel>Doesn&apos;t Exist</defaultConnectorLabel>
        <rules>
            <name>outcome_User_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>record_PortalUser</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decision_Check_if_StanlibPortalUser_PersonAccount</targetReference>
            </connector>
            <label>User Exists</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Delete User from Group On ACR Delete Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Delete User from Group On ACR Delete Flow</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>gr_Get_Group_Member_Account_Read</name>
        <label>Get Group Member - Account Read</label>
        <locationX>575</locationX>
        <locationY>1566</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>assignment_GM_To_Delete_AccRead</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account.CMN_PublicGroupAccountRead__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>record_PortalUser.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>gr_Get_Group_Member_Both_Groups</name>
        <label>Get Group Member - Both Groups</label>
        <locationX>778</locationX>
        <locationY>1566</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>assignment_GM_To_Delete_Both</targetReference>
        </connector>
        <filterLogic>(1 AND 3) OR (2 AND 3)</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account.CMN_PublicGroupAccountRead__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account.CMN_PublicGroupCaseRead__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>record_PortalUser.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>gr_Get_Group_Member_Case_Read</name>
        <label>Get Group Member - Case Read</label>
        <locationX>992</locationX>
        <locationY>1567</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>assignment_GM_To_Delete_CaseRead</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account.CMN_PublicGroupCaseRead__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>record_PortalUser.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>gr_Get_User_Enabled_Contact</name>
        <label>Get User Enabled Contact</label>
        <locationX>775</locationX>
        <locationY>658</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>decision_Check_User_Exists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Contact.AccountId</elementReference>
            </value>
        </filters>
        <object>User</object>
        <outputReference>record_PortalUser</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>AccountId</queriedFields>
        <queriedFields>ContactId</queriedFields>
        <queriedFields>ProfileId</queriedFields>
        <queriedFields>IsPortalEnabled</queriedFields>
    </recordLookups>
    <start>
        <locationX>649</locationX>
        <locationY>182</locationY>
        <connector>
            <targetReference>gr_Get_User_Enabled_Contact</targetReference>
        </connector>
        <object>AccountContactRelation</object>
        <recordTriggerType>Delete</recordTriggerType>
        <triggerType>RecordBeforeDelete</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>collection_GroupMembersToDelete</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>GroupMember</objectType>
    </variables>
    <variables>
        <name>GroupMemberIdsToDelete</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>record_AccountReadGroupMember</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>GroupMember</objectType>
    </variables>
    <variables>
        <name>record_CaseReadGroupMember</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>GroupMember</objectType>
    </variables>
    <variables>
        <name>record_PortalUser</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>User</objectType>
    </variables>
</Flow>
