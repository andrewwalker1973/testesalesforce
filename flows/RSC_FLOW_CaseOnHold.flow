<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <actionCalls>
        <name>Post_Chatter_On_Case</name>
        <label>Post Chatter On Case</label>
        <locationX>1458</locationX>
        <locationY>2222</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>RSC_ChatterMessage</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>RSC_GetCaseRecords.Id</elementReference>
            </value>
        </inputParameters>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <apiVersion>53.0</apiVersion>
    <assignments>
        <description>Assign case Id to the Target for Team Leaders</description>
        <name>Assign_d_To_Target</name>
        <label>Assign Id To Target</label>
        <locationX>1590</locationX>
        <locationY>1910</locationY>
        <assignmentItems>
            <assignToReference>RSC_GroupId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Managers_Group.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Post_Chatter_On_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Manager_Group_Name</name>
        <label>Assign Manager Group Name</label>
        <locationX>1546</locationX>
        <locationY>1238</locationY>
        <assignmentItems>
            <assignToReference>RSC_ManagerGroup</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Select_Proper_Group.Label</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Select_Proper_Group</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assign the target id for the service agent</description>
        <name>Assign_Target_Id</name>
        <label>Assign Target Id</label>
        <locationX>1062</locationX>
        <locationY>1910</locationY>
        <assignmentItems>
            <assignToReference>RSC_GroupId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>RSC_GetTeamsGroup.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Post_Chatter_On_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Team_Leader_Group_Name</name>
        <label>Assign Team Leader Group Name</label>
        <locationX>1810</locationX>
        <locationY>1238</locationY>
        <assignmentItems>
            <assignToReference>RSC_TeamLeaderGroup</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Select_Proper_Group.Label</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Select_Proper_Group</targetReference>
        </connector>
    </assignments>
    <choices>
        <name>EscalateCase</name>
        <choiceText>Escalate Case</choiceText>
        <dataType>Boolean</dataType>
    </choices>
    <choices>
        <name>PutCaseOnHold</name>
        <choiceText>Put Case On Hold</choiceText>
        <dataType>Boolean</dataType>
    </choices>
    <decisions>
        <name>Check_Group_Type</name>
        <label>Check Group Type</label>
        <locationX>1810</locationX>
        <locationY>1118</locationY>
        <defaultConnector>
            <targetReference>Select_Proper_Group</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Manager_Group</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Select_Proper_Group.RSC_GroupType__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Manager Group</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Manager_Group_Name</targetReference>
            </connector>
            <label>Manager Group ?</label>
        </rules>
        <rules>
            <name>Team_Leader_Group</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Select_Proper_Group.RSC_GroupType__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Team Leader Group</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Team_Leader_Group_Name</targetReference>
            </connector>
            <label>Team Leader Group?</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_Manager_Groups_exists</name>
        <label>Check if Manager Groups exists?</label>
        <locationX>1722</locationX>
        <locationY>1790</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Manager_Group_Preesent</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Managers_Group.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_d_To_Target</targetReference>
            </connector>
            <label>Manager Group Preesent</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_Team_Leader_group_exists</name>
        <label>Check if Team Leader group exists</label>
        <locationX>1194</locationX>
        <locationY>1790</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Group_Present</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>RSC_GetTeamsGroup.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Target_Id</targetReference>
            </connector>
            <label>Group Present</label>
        </rules>
    </decisions>
    <decisions>
        <description>Used to check the profile of the logged-in user.</description>
        <name>Check_User_Profile</name>
        <label>Check User Profile</label>
        <locationX>1458</locationX>
        <locationY>1550</locationY>
        <defaultConnector>
            <targetReference>Get_Managers_Group</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Not_a_Team_Leader</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>RSC_FetchedProfileName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Liberty Servicing Supervisor</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>RSC_GetTeamsGroup</targetReference>
            </connector>
            <label>Not a Team Leader</label>
        </rules>
    </decisions>
    <decisions>
        <description>Used to check the Status of the Case. If the case Status != In Progress, the case cannot be put On Hold</description>
        <name>CheckCaseStatus</name>
        <label>Check Case Status</label>
        <locationX>1612</locationX>
        <locationY>398</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>CaseStatusNotInProgress</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>RSC_GetCaseRecords.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>In Progress</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CaseStatusNew</targetReference>
            </connector>
            <label>Case Status Not In Progress</label>
        </rules>
        <rules>
            <name>CaseAlreadyEscalated</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>RSC_GetCaseRecords.SC_SubStatus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>On Hold</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>RSC_GetCaseRecords.SC_OnHoldStatus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Escalated</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CaseAlreadyEscalatedMessage</targetReference>
            </connector>
            <label>Case Already Escalated</label>
        </rules>
        <rules>
            <name>CaseInProgress</name>
            <conditionLogic>(1 AND 2) OR (3 AND 4)</conditionLogic>
            <conditions>
                <leftValueReference>RSC_GetCaseRecords.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>In Progress</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>RSC_GetCaseRecords.SC_SubStatus__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>On Hold</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>RSC_GetCaseRecords.SC_SubStatus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>On Hold</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>RSC_GetCaseRecords.SC_OnHoldStatus__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Escalated</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>On_Hold_status_And_Reason</targetReference>
            </connector>
            <label>Case In Progress</label>
        </rules>
    </decisions>
    <decisions>
        <name>RSC_CheckOnHoldStatusSelected</name>
        <label>Check On Hold Status Selected</label>
        <locationX>1744</locationX>
        <locationY>638</locationY>
        <defaultConnector>
            <targetReference>UpdateDetailsOnCase</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>On Hold Status Not Escalate</defaultConnectorLabel>
        <rules>
            <name>Case_Already_On_Hold</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>RSC_GetCaseRecords.SC_SubStatus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>On Hold</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>RSC_GetCaseRecords.SC_OnHoldStatus__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Escalated</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>OnHoldStatusAndReasonSelector.topValue</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Escalated</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>RSC_GetCaseRecords.SC_OnHoldStatus__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>RSC_GetCaseRecords.SC_OnHoldStatus__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Outstanding Requirements</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>OnHoldStatusAndReasonSelector.topValue</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Outstanding Requirements</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CaseAlreadyOnHoldMessage</targetReference>
            </connector>
            <label>Case Already On Hold</label>
        </rules>
        <rules>
            <name>OnHoldStatusEscalated</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>OnHoldStatusAndReasonSelector.topValue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Escalated</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>RSC_UpdateCaseRecord</targetReference>
            </connector>
            <label>On Hold Status Escalated</label>
        </rules>
        <rules>
            <name>RSC_OnHoldStatusOutstandingRequirements</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>OnHoldStatusAndReasonSelector.topValue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Outstanding Requirements</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Template_Code</targetReference>
            </connector>
            <label>On Hold Status Outstanding Requirements</label>
        </rules>
        <rules>
            <name>ReasonRefertoDepartment</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>OnHoldStatusAndReasonSelector.middleValue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Refer To Department Name</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>RSC_CloneCaseLWC</targetReference>
            </connector>
            <label>Reason Refer to Department</label>
        </rules>
    </decisions>
    <decisions>
        <name>RSCCheck_if_is_success</name>
        <label>Check if is success</label>
        <locationX>2250</locationX>
        <locationY>998</locationY>
        <defaultConnector>
            <targetReference>Error_Screen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Unsuccesful</defaultConnectorLabel>
        <rules>
            <name>RSC_OutComeIsSuccess</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>RSC_InvokeSendEmailFlow.RSC_IsSuccess</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>RSCUpdateCaseOnSuccess</targetReference>
            </connector>
            <label>Succesful</label>
        </rules>
    </decisions>
    <dynamicChoiceSets>
        <name>EscalationReasonPicklist</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>SC_Reason__c</picklistField>
        <picklistObject>Case</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>OnHoldStatus</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>SC_OnHoldStatus__c</picklistField>
        <picklistObject>Case</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>ReasonPicklist</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>SC_Reason__c</picklistField>
        <picklistObject>Case</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>RSC_Templates</name>
        <dataType>String</dataType>
        <displayField>Label</displayField>
        <object>CMN_CommunicationTemplateMap__mdt</object>
        <outputAssignments>
            <assignToReference>templateCode</assignToReference>
            <field>CMN_TemplateCode__c</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>templateLabel</assignToReference>
            <field>Label</field>
        </outputAssignments>
        <valueField>Label</valueField>
    </dynamicChoiceSets>
    <formulas>
        <name>CaseLink</name>
        <dataType>String</dataType>
        <expression>LEFT({!$Api.Partner_Server_URL_260}, FIND( &apos;/services&apos;, {!$Api.Partner_Server_URL_260}))&amp;{!RSC_GetCaseRecords.Id}</expression>
    </formulas>
    <formulas>
        <description>To set the Resumed Date to 24hrs from now if the Reason = Overnight Update</description>
        <name>RSC_ResumedDate24Hrs</name>
        <dataType>DateTime</dataType>
        <expression>IF( {!OnHoldStatusAndReasonSelector.middleValue}= &apos;Overnight Update&apos;, NOW()+1,{!ResumeDateTimeSelected})</expression>
    </formulas>
    <interviewLabel>RSC_FLOW_CaseOnHold {!$Flow.CurrentDateTime}</interviewLabel>
    <label>RSC_FLOW_CaseOnHold</label>
    <loops>
        <name>Select_Proper_Group</name>
        <label>Select Proper Group</label>
        <locationX>1458</locationX>
        <locationY>998</locationY>
        <collectionReference>Get_Metadata_records</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Check_Group_Type</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Check_User_Profile</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>Get_Managers_Group</name>
        <label>Get Managers Group</label>
        <locationX>1722</locationX>
        <locationY>1670</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_if_Manager_Groups_exists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>RSC_ManagerGroup</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CollaborationGroup</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Metadata_records</name>
        <label>Get Metadata records</label>
        <locationX>1458</locationX>
        <locationY>878</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Select_Proper_Group</targetReference>
        </connector>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>RSC_ChatterGroupSetting__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Template_Code</name>
        <label>Get Template Code</label>
        <locationX>2250</locationX>
        <locationY>758</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>RSC_InvokeSendEmailFlow</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Label</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>OnHoldStatusAndReasonSelector.topValue</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CMN_CommunicationTemplateMap__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>RSC_GetCaseRecords</name>
        <label>GetCaseRecords</label>
        <locationX>1612</locationX>
        <locationY>158</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>RSC_SubflowToFetchProfileDetails</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>RSC_GetTeamsGroup</name>
        <label>Get Teams group</label>
        <locationX>1194</locationX>
        <locationY>1670</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_if_Team_Leader_group_exists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>RSC_TeamLeaderGroup</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CollaborationGroup</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>RSC_UpdateCaseRecord</name>
        <label>Update Case Record</label>
        <locationX>1458</locationX>
        <locationY>758</locationY>
        <connector>
            <targetReference>Get_Metadata_records</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>RSC_GetCaseRecords.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>IsEscalated</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RSC_ResumeDate__c</field>
            <value>
                <elementReference>RSC_ResumeDateBlank</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SC_OnHoldStatus__c</field>
            <value>
                <elementReference>OnHoldStatusAndReasonSelector.topValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SC_Reason__c</field>
            <value>
                <elementReference>OnHoldStatusAndReasonSelector.middleValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SC_SubStatus__c</field>
            <value>
                <stringValue>On Hold</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>RSC_UpdateParentCase</name>
        <label>UpdateParentCase</label>
        <locationX>2646</locationX>
        <locationY>878</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>RSC_GetCaseRecords.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Comments</field>
            <value>
                <elementReference>OnHoldCommentsEnt</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SC_OnHoldStatus__c</field>
            <value>
                <elementReference>OnHoldStatusAndReasonSelector.topValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SC_Reason__c</field>
            <value>
                <elementReference>OnHoldStatusAndReasonSelector.middleValue</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>RSCUpdateCaseOnSuccess</name>
        <label>Update Case On Success</label>
        <locationX>2118</locationX>
        <locationY>1118</locationY>
        <connector>
            <targetReference>Success_Screen</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>SC_OnHoldStatus__c</field>
            <value>
                <stringValue>Outstanding Requirements</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SC_SubStatus__c</field>
            <value>
                <stringValue>On Hold</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateDetailsOnCase</name>
        <label>UpdateDetailsOnCase</label>
        <locationX>2910</locationX>
        <locationY>758</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Comments</field>
            <value>
                <elementReference>OnHoldCommentsEnt</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RSC_ExternalDepartment__c</field>
            <value>
                <elementReference>OnHoldStatusAndReasonSelector.bottomValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RSC_ResumeDate__c</field>
            <value>
                <elementReference>RSC_ResumedDate24Hrs</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SC_OnHoldStatus__c</field>
            <value>
                <elementReference>OnHoldStatusAndReasonSelector.topValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SC_Reason__c</field>
            <value>
                <elementReference>OnHoldStatusAndReasonSelector.middleValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SC_SubStatus__c</field>
            <value>
                <stringValue>On Hold</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <screens>
        <name>CaseAlreadyEscalatedMessage</name>
        <label>Case Already Escalated</label>
        <locationX>314</locationX>
        <locationY>518</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>CaseAlreadyEscalatedError</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;Case is already Escalated&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>Screen used to display error message if the case is already On Hold / Escalated</description>
        <name>CaseAlreadyOnHoldMessage</name>
        <label>Case Already On Hold</label>
        <locationX>578</locationX>
        <locationY>758</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>CaseOnHoldMessage</name>
            <fieldText>&lt;p&gt;&lt;b&gt;Case is already On Hold&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>Screen used to display error message that the case cannot be put On hold since the Status = New</description>
        <name>CaseStatusNew</name>
        <label>Case Status New</label>
        <locationX>50</locationX>
        <locationY>518</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>CaseStatusNewMessage</name>
            <fieldText>&lt;p&gt;&lt;b&gt;Cannot put case On Hold since the Status is not In Progress&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Error_Screen</name>
        <label>Error Screen</label>
        <locationX>2382</locationX>
        <locationY>1118</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>error_message</name>
            <fieldText>&lt;p&gt;Error : Email request failed, please try again&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Screen used for the user to select On Hold Status and the Reason.</description>
        <name>On_Hold_status_And_Reason</name>
        <label>On Hold status And Reason</label>
        <locationX>1744</locationX>
        <locationY>518</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>RSC_CheckOnHoldStatusSelected</targetReference>
        </connector>
        <fields>
            <name>OnHoldStatusAndReasonSelector</name>
            <extensionName>flowruntime:dependentPicklists</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>dependencyWrapperApiName</name>
                <value>
                    <stringValue>Case</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>middlePicklistApiName</name>
                <value>
                    <stringValue>SC_Reason__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>topPicklistApiName</name>
                <value>
                    <stringValue>SC_OnHoldStatus__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>topRequired</name>
                <value>
                    <elementReference>OnHoldStatusEscalated</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>middleRequired</name>
                <value>
                    <elementReference>OnHoldStatusEscalated</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>topValue</name>
                <value>
                    <elementReference>OnHoldStatusSelected</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>middleValue</name>
                <value>
                    <elementReference>OnHoldReasonSelected</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>bottomPicklistApiName</name>
                <value>
                    <stringValue>RSC_ExternalDepartment__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>bottomValue</name>
                <value>
                    <elementReference>RSC_ExternalDepartmentSelected</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>OnHoldCommentsEnt</name>
            <fieldText>On Hold Comments (up to 4000 characters)</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Max character limit exceeded.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>LEN({!OnHoldCommentsEnt}) &lt; 4000</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>OnHoldStatusAndReasonSelector.topValue</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Escalated</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>OnHoldStatusAndReasonSelector.topValue</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>OnHoldStatusAndReasonSelector.topValue</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Outstanding Requirements</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>ResumeDateTimeSelected</name>
            <dataType>DateTime</dataType>
            <defaultValue>
                <elementReference>RSC_24HrsResumedDate</elementReference>
            </defaultValue>
            <fieldText>Resume Date</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(231, 41, 41); font-family: Arial, Helvetica, sans-serif; font-size: 11.36px;
					background-color: rgb(255, 255, 255);&quot;&gt;Resume Date cannot be less than today or more than 2 months from today.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!ResumeDateTimeSelected} &gt; NOW() &amp;&amp;(DATEVALUE({!ResumeDateTimeSelected}) &lt; ADDMONTHS(TODAY(),2))</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>OnHoldStatusAndReasonSelector.topValue</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Escalated</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>OnHoldStatusAndReasonSelector.topValue</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>OnHoldStatusAndReasonSelector.middleValue</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Overnight Update</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>OnHoldStatusAndReasonSelector.topValue</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Outstanding Requirements</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>OnHoldStatusAndReasonSelector.middleValue</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Refer To Department Name</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>RSC_CloneCaseLWC</name>
        <label>RSC_CloneCaseLWC</label>
        <locationX>2646</locationX>
        <locationY>758</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>RSC_UpdateParentCase</targetReference>
        </connector>
        <fields>
            <name>RscLwcCloneCaseWithFieldSet</name>
            <extensionName>c:rscLwcCloneCaseWithFieldSets</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>invokedFromFlow</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>RSC_GetCaseRecords.Id</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Success_Screen</name>
        <label>Success Screen</label>
        <locationX>2118</locationX>
        <locationY>1238</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>Success_message</name>
            <fieldText>&lt;p&gt;E&lt;span style=&quot;font-size: 15px; color: rgba(0, 0, 0, 0.9);&quot;&gt;mail request sent successfully&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>1486</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>RSC_GetCaseRecords</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <description>Get_Template_Code.CMN_TemplateCode__c</description>
        <name>RSC_InvokeSendEmailFlow</name>
        <label>Invoke Send Email Flow</label>
        <locationX>2250</locationX>
        <locationY>878</locationY>
        <connector>
            <targetReference>RSCCheck_if_is_success</targetReference>
        </connector>
        <flowName>RSC_FLOW_SendEmailSubFlow</flowName>
        <inputAssignments>
            <name>CaseId</name>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>TemplateCode</name>
            <value>
                <elementReference>Get_Template_Code.CMN_TemplateCode__c</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <name>RSC_SubflowToFetchProfileDetails</name>
        <label>Subflow To Fetch Profile Details</label>
        <locationX>1612</locationX>
        <locationY>278</locationY>
        <connector>
            <targetReference>CheckCaseStatus</targetReference>
        </connector>
        <flowName>CMN_FLOW_FetchProfileDetails</flowName>
        <outputAssignments>
            <assignToReference>RSC_FetchedProfileName</assignToReference>
            <name>RSC_RetrievedProfileName</name>
        </outputAssignments>
    </subflows>
    <textTemplates>
        <name>RSC_ChatterMessage</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Hi @[{!RSC_GroupId}]
			Case {!RSC_GetCaseRecords.CaseNumber} is escalated.
			Escalation Reason: {!OnHoldStatusAndReasonSelector.middleValue}</text>
    </textTemplates>
    <variables>
        <name>OnHoldReasonSelected</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>OnHoldStatusSelected</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>RSC_24HrsResumedDate</name>
        <dataType>DateTime</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>RSC_ResumedDate24Hrs</elementReference>
        </value>
    </variables>
    <variables>
        <name>RSC_ExternalDepartmentSelected</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>RSC_ExternalDepartmentValue</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>RSC_FetchedProfileName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>RSC_GroupId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>RSC_ManagerGroup</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>RSC_ResumeDateBlank</name>
        <dataType>DateTime</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>RSC_TeamLeaderGroup</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Holds the target id for the chatter post</description>
        <name>TargetId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>templateCode</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>templateLabel</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
